# .github/workflows/python.yml
name: Python CI
on:
  push:
    branches: [ master, main ]
  pull_request:
jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install dependencies (with pybroker fallback stub)
        shell: bash
        env:
          PIP_DISABLE_PIP_VERSION_CHECK: '1'
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest mlflow optuna openai pandas pyarrow
          if ! pip install pybroker; then
            mkdir -p ci_vendor/pybroker
            printf "%s\n" "# CI stub for pybroker (imports only)." > ci_vendor/pybroker/__init__.py
            echo "PYTHONPATH=$PWD/ci_vendor:$PYTHONPATH" >> $GITHUB_ENV
          fi
      - name: Set test environment + quick diag
        shell: bash
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          PYTHONWARNINGS: ignore
        run: |
          python -c "import os; print('OPENAI_API_KEY set:', bool(os.getenv('OPENAI_API_KEY')))"
          pip freeze | sed -n '1,120p'
      - name: Run tests (verbose) and collect reports
        shell: bash
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          mkdir -p artifacts/_ci
          pytest -vv -rA --durations=25 --maxfail=1 | tee artifacts/_ci/pytest-output.txt
          status=${PIPESTATUS[0]}
          if [ -d artifacts/_quarantine ]; then cp -r artifacts/_quarantine artifacts/_ci/_quarantine; fi
          if [ -f companion/explorer/llm_logs.json ]; then cp companion/explorer/llm_logs.json artifacts/_ci/; fi
          if [ -d logs ]; then cp -r logs artifacts/_ci/logs; fi
          exit $status
      - name: Upload CI artifacts (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-artifacts
          path: |
            artifacts/_ci
            .pytest_cache
            **/*.log
