name: Python CI

on:
  push:
    branches: [ master, main ]
  pull_request:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies (with pybroker fallback stub)
        shell: bash
        env:
          PIP_DISABLE_PIP_VERSION_CHECK: '1'
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # core test deps
          pip install pytest mlflow optuna openai pandas pyarrow
          # try pybroker; if not available on the runner, create a stub so imports succeed
          if ! pip install pybroker; then
            echo "pybroker wheel not found for this runner. Using CI stub."
            mkdir -p ci_vendor/pybroker
            printf "# CI stub for pybroker (imports only). Real package is used locally.\n" > ci_vendor/pybroker/__init__.py
            echo "PYTHONPATH=$PWD/ci_vendor:$PYTHONPATH" >> $GITHUB_ENV
          fi

      - name: Set test environment + quick diag
        shell: bash
        env:
          OPENAI_API_KEY: sk-test-00000000000000000000000000000000
          PYTHONWARNINGS: ignore
        run: |
          python -c "import sys,platform; print('Python', sys.version); print('Platform', platform.platform())"
          pip freeze | sed -n '1,120p'

      - name: Run tests
        shell: bash
        run: |
          mkdir -p artifacts/_ci
          pytest -vv --durations=25 --maxfail=1 || echo "PYTEST_FAILED=1" >> $GITHUB_ENV
          # collect helpful artifacts
          if [ -d artifacts/_quarantine ]; then cp -r artifacts/_quarantine artifacts/_ci/_quarantine; fi
          if [ -f companion/explorer/llm_logs.json ]; then cp companion/explorer/llm_logs.json artifacts/_ci/; fi
          if [ -d logs ]; then cp -r logs artifacts/_ci/logs; fi

      - name: Upload CI artifacts (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-artifacts
          path: |
            artifacts/_ci
            .pytest_cache
            **/*.log

      - name: Fail if pytest failed
        if: env.PYTEST_FAILED == '1'
        shell: bash
        run: |
          echo "::error::Pytest reported failures. See the 'ci-artifacts' artifact for logs/quarantine."
          exit 1
